
#Ref Source: https://machinelearningmastery.com/develop-neural-machine-translation-system-keras/

import tensorflow as tf
from keras.models import Sequential, load_model
from keras.layers import Dense, Activation, Embedding, Flatten, Dropout, TimeDistributed, Reshape, Lambda
from keras.layers import LSTM
from keras.optimizers import RMSprop, Adam, SGD

#----------------------------------------------
#-----------Todo: inputs for the model---------
#----------------------------------------------

# define NMT model
def define_model(src_vocab, tar_vocab, src_timesteps, tar_timesteps):

  hidden_size = 500
  use_dropout=True
  model = Sequential()
  #for English
  model.add(Embedding(src_vocab, hidden_size, input_length=src_timesteps))
  model.add(LSTM(hidden_size))
  model.add(RepeatVector(tar_timesteps))
  model.add(LSTM(hidden_size, return_sequences=True))
  if use_dropout:
    model.add(Dropout(0.5))
  #for Portugese
  model.add(TimeDistributed(Dense(tar_vocab)))
  model.add(Activation('softmax'))
  return model




